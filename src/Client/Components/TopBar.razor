@inject IJSRuntime Js
<div
    class="container flex p-3 justify-between items-center mt-4 mx-auto max-w-[1200px] rounded-lg bg-background dark:bg-background text-foreground dark:text-primary-foreground border border-border dark:border-border">

    <button id="left"
            class="rounded-md p-3 border border-border transition-colors duration-200 hover:text-primary text-muted-foreground hover:bg-primary-foreground cursor-pointer">
        <Blazicon class="" Svg='GoogleMaterialRoundIcon.Dehaze'/>
    </button>

    <div id="right" class="flex space-x-4 mr-3">
        <button
            class="border border-border rounded-md p-3 transition-colors duration-200 text-muted-foreground hover:text-primary hover:bg-primary-foreground cursor-pointer">
            <Blazicon Svg='GoogleMaterialRoundIcon.Search'/>
        </button>
        <button
            class="border border-border rounded-md p-3 transition-colors duration-200 text-muted-foreground  hover:text-primary hover:bg-primary-foreground cursor-pointer">
            <Blazicon Svg='GoogleMaterialRoundIcon.Notifications'/>
        </button>
        <button
            class="border border-border rounded-md p-3 transition-colors duration-200 text-muted-foreground  hover:text-primary hover:bg-primary-foreground cursor-pointer">
            <Blazicon Svg='GoogleMaterialRoundIcon.Person'/>
        </button>
        <button
            class="border border-border rounded-md p-3 transition-colors duration-200 text-muted-foreground hover:text-primary hover:bg-primary-foreground cursor-pointer"
            @onclick="async () => await ToggleDarkMode()">
            <Blazicon Svg='IsDarkMode ? GoogleMaterialRoundIcon.LightMode : GoogleMaterialRoundIcon.DarkMode'/>
        </button>
    </div>
</div>


@code {
    private bool IsDarkMode { get; set; }

    protected override async Task OnInitializedAsync()
    {
        IsDarkMode = await Js.InvokeAsync<bool>("checkTheme");
    }

    private async Task ToggleDarkMode()
    {
        IsDarkMode = await Js.InvokeAsync<bool>("toggleDarkMode");
    }
}