@page "/LogIn"
@using Application.Auth
@using Domain.ValueObjects
@inherits Client.Components.shared.AppComponentBase

<div class="flex-grow flex items-center justify-center h-screen px-5">
    <form class="flex w-1/5 flex-col p-8 bg-background text-foreground border border-border rounded-lg shadow">
        <div class="mb-5">
            <label for="Email" class="block mb-2 text-sm font-medium text-muted-foreground">Email</label>
            <input type="email" id="Email" @bind-value="Command.Email"
                   class="border border-border text-muted-foreground text-sm rounded-lg block w-full p-2.5 bg-background"
                   placeholder="Email" required/>
        </div>
        <div class="mb-5">
            <label for="Password" class="block mb-2 text-sm font-medium text-muted-foreground">Password</label>
            <input type="password" id="Password" @bind-value="Command.Password"
                   class="border border-border text-muted-foreground text-sm rounded-lg block w-full p-2.5 bg-background"
                   placeholder="Password" required/>
        </div>


        <div class="flex items-center mb-5">
            <div class="flex items-center h-5">
                <input id="remember" type="checkbox" value=""
                       class="w-4 h-4 border border-border bg-secondary rounded-sm"
                       required/>
            </div>
            <label for="remember" class="ms-2 text-sm font-medium text-muted-foreground">Remember me</label>
        </div>
        <button type="submit" @onclick="OnValidSubmit"
                class="text-primary focus:ring-1 hover:cursor-pointer bg-secondary font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center">
            Submit
        </button>
        <span class="text-center text-sm text-muted-foreground mt-4">Don't have an account? <a
                @onclick="@(() => NavigationManager.NavigateTo("/Register"))" class="text-primary hover:cursor-pointer">Register</a> instead</span>
    </form>
</div>

@code
{
    private LoginCommand Command { get; set; } = new();

    private async Task OnValidSubmit()
    {
        var user = await SendCommandAsync(Command);
        switch (user)
        {
            case null:
                Toast.ShowError("Wrong email or password");
                return;
            default:
                var token = JwtGenerator.GenerateToken(user);
                user.RefreshToken = RefreshToken.CreateNew();
                await CookieService.SetCookieAsync("authorization", token);
                NavigationManager.NavigateTo("/", true);
                break;
        }
    }
}
